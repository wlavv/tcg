<?php

namespace ContainerIwDR3j7;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_Messenger_HandlerDescriptor_ZdEH0JService extends AdminKernelProdContainer
{
    /*
     * Gets the private '.messenger.handler_descriptor.zdEH0J_' shared service.
     *
     * @return \Symfony\Component\Messenger\Handler\HandlerDescriptor
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['PrestaShop\\PrestaShop\\Adapter\\Product\\Repository\\ProductRepository'] ?? $container->load('getProductRepository3Service'));

        return $container->privates['.messenger.handler_descriptor.zdEH0J_'] = new \Symfony\Component\Messenger\Handler\HandlerDescriptor((new \PrestaShop\PrestaShop\Adapter\Product\Shop\CommandHandler\SetProductShopsHandler($a, ($container->privates['PrestaShop\\PrestaShop\\Adapter\\Product\\ProductDeleter'] ?? $container->load('getProductDeleterService')), new \PrestaShop\PrestaShop\Adapter\Product\Update\ProductShopUpdater($a, ($container->privates['PrestaShop\\PrestaShop\\Adapter\\Product\\Stock\\Repository\\StockAvailableRepository'] ?? $container->load('getStockAvailableRepositoryService')), ($container->services['PrestaShop\\PrestaShop\\Adapter\\Shop\\Repository\\ShopRepository'] ?? self::getShopRepositoryService($container)), ($container->services['PrestaShop\\PrestaShop\\Adapter\\Product\\Image\\Repository\\ProductImageRepository'] ?? $container->load('getProductImageRepositoryService')), ($container->privates['PrestaShop\\PrestaShop\\Adapter\\Product\\Stock\\Update\\ProductStockUpdater'] ?? $container->load('getProductStockUpdaterService')), ($container->privates['PrestaShop\\PrestaShop\\Adapter\\Product\\Combination\\Repository\\CombinationRepository'] ?? $container->load('getCombinationRepositoryService')), ($container->services['PrestaShop\\PrestaShop\\Adapter\\Product\\Combination\\Update\\CombinationStockUpdater'] ?? $container->load('getCombinationStockUpdaterService')), ($container->privates['PrestaShop\\PrestaShop\\Adapter\\Product\\Combination\\Update\\DefaultCombinationUpdater'] ?? $container->load('getDefaultCombinationUpdaterService')), ($container->privates['PrestaShop\\PrestaShop\\Adapter\\Product\\Update\\ProductCategoryUpdater'] ?? $container->load('getProductCategoryUpdaterService')), ($container->services['PrestaShop\\PrestaShop\\Adapter\\Category\\Repository\\CategoryRepository'] ?? $container->load('getCategoryRepository2Service')))))->handle(...), ['method' => 'handle']);
    }
}
