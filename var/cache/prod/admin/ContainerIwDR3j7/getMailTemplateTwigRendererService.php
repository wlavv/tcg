<?php

namespace ContainerIwDR3j7;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getMailTemplateTwigRendererService extends AdminKernelProdContainer
{
    /*
     * Gets the public 'PrestaShop\PrestaShop\Adapter\MailTemplate\MailTemplateTwigRenderer' shared service.
     *
     * @return \PrestaShop\PrestaShop\Adapter\MailTemplate\MailTemplateTwigRenderer
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->privates['twig'] ?? self::getTwigService($container));

        if (isset($container->services['PrestaShop\\PrestaShop\\Adapter\\MailTemplate\\MailTemplateTwigRenderer'])) {
            return $container->services['PrestaShop\\PrestaShop\\Adapter\\MailTemplate\\MailTemplateTwigRenderer'];
        }

        $container->services['PrestaShop\\PrestaShop\\Adapter\\MailTemplate\\MailTemplateTwigRenderer'] = $instance = new \PrestaShop\PrestaShop\Adapter\MailTemplate\MailTemplateTwigRenderer($a, ($container->services['prestashop.core.mail_template.variables_builder'] ?? $container->load('getPrestashop_Core_MailTemplate_VariablesBuilderService')), ($container->services['PrestaShop\\PrestaShop\\Core\\Hook\\HookDispatcher'] ?? self::getHookDispatcherService($container)), ($container->services['PrestaShop\\PrestaShop\\Adapter\\Configuration'] ??= new \PrestaShop\PrestaShop\Adapter\Configuration())->getBoolean("PS_GIFT_WRAPPING"));

        $instance->addTransformation(($container->services['prestashop.core.mail_template.transformation.css_inline'] ??= new \PrestaShop\PrestaShop\Core\MailTemplate\Transformation\CSSInlineTransformation()));
        $instance->addTransformation(($container->services['prestashop.core.mail_template.transformation.html_textify'] ??= new \PrestaShop\PrestaShop\Core\MailTemplate\Transformation\HTMLToTextTransformation()));

        return $instance;
    }
}
