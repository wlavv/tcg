<?php

namespace ContainerIwDR3j7;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getPrestashop_RouterService extends AdminKernelProdContainer
{
    /*
     * Gets the public 'prestashop.router' shared service.
     *
     * @return \PrestaShopBundle\Service\Routing\Router
     */
    public static function do($container, $lazyLoad = true)
    {
        $container->services['prestashop.router'] = $instance = new \PrestaShopBundle\Service\Routing\Router($container, (\dirname(__DIR__, 5).'/app/config/admin/routing.yml'), ['cache_dir' => $container->targetDir.'', 'debug' => false, 'generator_class' => 'Symfony\\Component\\Routing\\Generator\\CompiledUrlGenerator', 'generator_dumper_class' => 'Symfony\\Component\\Routing\\Generator\\Dumper\\CompiledUrlGeneratorDumper', 'matcher_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableCompiledUrlMatcher', 'matcher_dumper_class' => 'Symfony\\Component\\Routing\\Matcher\\Dumper\\CompiledUrlMatcherDumper', 'strict_requirements' => NULL], ($container->privates['router.request_context'] ?? self::getRouter_RequestContextService($container)), ($container->privates['parameter_bag'] ??= new \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag($container)), self::getMonolog_Logger_RouterService($container), 'pt-PT');

        $instance->setConfigCacheFactory(($container->privates['config_cache_factory'] ??= new \Symfony\Component\Config\ResourceCheckerConfigCacheFactory()));
        $instance->addExpressionLanguageProvider(($container->privates['router.expression_language_provider'] ?? self::getRouter_ExpressionLanguageProviderService($container)));
        $instance->setUserTokenManager(($container->services['PrestaShopBundle\\Security\\Admin\\UserTokenManager'] ?? self::getUserTokenManagerService($container)));
        $instance->setAnonymousRouteProvider(($container->privates['PrestaShopBundle\\Routing\\AnonymousRouteProvider'] ?? $container->load('getAnonymousRouteProviderService')));

        return $instance;
    }
}
