<?php

namespace ContainerXrLzW05;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getCombinationStockUpdaterService extends AdminKernelProdContainer
{
    /*
     * Gets the public 'PrestaShop\PrestaShop\Adapter\Product\Combination\Update\CombinationStockUpdater' shared service.
     *
     * @return \PrestaShop\PrestaShop\Adapter\Product\Combination\Update\CombinationStockUpdater
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->services['PrestaShop\\PrestaShop\\Adapter\\Product\\Combination\\Update\\CombinationStockUpdater'] = new \PrestaShop\PrestaShop\Adapter\Product\Combination\Update\CombinationStockUpdater(($container->privates['PrestaShop\\PrestaShop\\Adapter\\Product\\Stock\\Repository\\StockAvailableRepository'] ?? $container->load('getStockAvailableRepositoryService')), ($container->privates['PrestaShop\\PrestaShop\\Adapter\\Product\\Combination\\Repository\\CombinationRepository'] ?? $container->load('getCombinationRepositoryService')), ($container->services['PrestaShop\\PrestaShop\\Adapter\\Product\\Stock\\Repository\\MovementReasonRepository'] ?? $container->load('getMovementReasonRepositoryService')), ($container->privates['PrestaShop\\PrestaShop\\Core\\Stock\\StockManager'] ??= new \PrestaShop\PrestaShop\Core\Stock\StockManager()), ($container->services['PrestaShop\\PrestaShop\\Adapter\\Configuration'] ??= new \PrestaShop\PrestaShop\Adapter\Configuration()), ($container->services['PrestaShop\\PrestaShop\\Core\\Hook\\HookDispatcher'] ?? self::getHookDispatcherService($container)));
    }
}
