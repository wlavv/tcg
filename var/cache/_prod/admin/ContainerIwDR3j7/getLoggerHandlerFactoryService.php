<?php

namespace ContainerIwDR3j7;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getLoggerHandlerFactoryService extends AdminKernelProdContainer
{
    /*
     * Gets the public 'PrestaShop\Module\PrestashopCheckout\Logger\LoggerHandlerFactory' shared autowired service.
     *
     * @return \PrestaShop\Module\PrestashopCheckout\Logger\LoggerHandlerFactory
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->services['PrestaShop\\Module\\PrestashopCheckout\\Logger\\LoggerHandlerFactory'] = new \PrestaShop\Module\PrestashopCheckout\Logger\LoggerHandlerFactory(($container->services['PrestaShop\\Module\\PrestashopCheckout\\Logger\\LoggerDirectory'] ??= new \PrestaShop\Module\PrestashopCheckout\Logger\LoggerDirectory('9.0.0', \dirname(__DIR__, 5)))->getPath(), ($container->services['PrestaShop\\Module\\PrestashopCheckout\\Logger\\LoggerFilename'] ?? $container->load('getLoggerFilenameService'))->get(), ($container->services['PrestaShop\\Module\\PrestashopCheckout\\Logger\\LoggerConfiguration'] ?? $container->load('getLoggerConfigurationService'))->getMaxFiles(), ($container->services['PrestaShop\\Module\\PrestashopCheckout\\Logger\\LoggerConfiguration'] ?? $container->load('getLoggerConfigurationService'))->getLevel());
    }
}
