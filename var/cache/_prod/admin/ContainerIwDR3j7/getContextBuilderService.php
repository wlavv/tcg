<?php

namespace ContainerIwDR3j7;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getContextBuilderService extends AdminKernelProdContainer
{
    /*
     * Gets the public 'PrestaShop\Module\Mbo\Service\View\ContextBuilder' shared autowired service.
     *
     * @return \PrestaShop\Module\Mbo\Service\View\ContextBuilder
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['PrestaShop\\PrestaShop\\Core\\Module\\ModuleRepository'] ?? $container->load('getModuleRepository2Service'));

        if (isset($container->services['PrestaShop\\Module\\Mbo\\Service\\View\\ContextBuilder'])) {
            return $container->services['PrestaShop\\Module\\Mbo\\Service\\View\\ContextBuilder'];
        }
        $b = ($container->services['prestashop.router'] ?? $container->load('getPrestashop_RouterService'));

        if (isset($container->services['PrestaShop\\Module\\Mbo\\Service\\View\\ContextBuilder'])) {
            return $container->services['PrestaShop\\Module\\Mbo\\Service\\View\\ContextBuilder'];
        }

        return $container->services['PrestaShop\\Module\\Mbo\\Service\\View\\ContextBuilder'] = new \PrestaShop\Module\Mbo\Service\View\ContextBuilder(($container->privates['PrestaShop\\PrestaShop\\Core\\Context\\EmployeeContext'] ?? self::getEmployeeContextService($container)), ($container->privates['PrestaShop\\PrestaShop\\Core\\Context\\CurrencyContext'] ?? self::getCurrencyContextService($container)), ($container->privates['PrestaShop\\PrestaShop\\Core\\Context\\LanguageContext'] ?? self::getLanguageContextService($container)), ($container->privates['PrestaShop\\PrestaShop\\Core\\Context\\CountryContext'] ?? self::getCountryContextService($container)), $a, $b, ($container->services['Doctrine\\Common\\Cache\\Psr6\\DoctrineProvider'] ?? $container->load('getDoctrineProviderService')), ($container->services['PrestaShop\\Module\\Mbo\\Api\\Security\\AdminAuthenticationProvider'] ?? $container->load('getAdminAuthenticationProviderService')), ($container->services['PrestaShop\\Module\\Mbo\\Accounts\\Provider\\AccountsDataProvider'] ??= new \PrestaShop\Module\Mbo\Accounts\Provider\AccountsDataProvider('7.1.2')));
    }
}
