<?php

namespace ContainerMuK0XhM;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSpecificPriceRepositoryService extends AdminKernelDevDebugContainer
{
    /**
     * Gets the public 'PrestaShop\PrestaShop\Adapter\Product\SpecificPrice\Repository\SpecificPriceRepository' shared service.
     *
     * @return \PrestaShop\PrestaShop\Adapter\Product\SpecificPrice\Repository\SpecificPriceRepository
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->services['PrestaShop\\PrestaShop\\Adapter\\Product\\SpecificPrice\\Repository\\SpecificPriceRepository'] = new \PrestaShop\PrestaShop\Adapter\Product\SpecificPrice\Repository\SpecificPriceRepository(($container->services['doctrine.dbal.default_connection'] ?? self::getDoctrine_Dbal_DefaultConnectionService($container)), 'ps_', new \PrestaShop\PrestaShop\Adapter\Product\SpecificPrice\Validate\SpecificPriceValidator(($container->services['PrestaShop\\PrestaShop\\Adapter\\Shop\\Repository\\ShopGroupRepository'] ?? $container->load('getShopGroupRepositoryService')), ($container->services['PrestaShop\\PrestaShop\\Adapter\\Shop\\Repository\\ShopRepository'] ?? self::getShopRepositoryService($container)), ($container->privates['PrestaShop\\PrestaShop\\Adapter\\Product\\Combination\\Repository\\CombinationRepository'] ?? $container->load('getCombinationRepositoryService')), ($container->services['PrestaShop\\PrestaShop\\Adapter\\Currency\\Repository\\CurrencyRepository'] ??= new \PrestaShop\PrestaShop\Adapter\Currency\Repository\CurrencyRepository()), ($container->services['PrestaShop\\PrestaShop\\Adapter\\Country\\Repository\\CountryRepository'] ?? self::getCountryRepositoryService($container)), ($container->services['PrestaShop\\PrestaShop\\Adapter\\Customer\\Group\\Repository\\GroupRepository'] ??= new \PrestaShop\PrestaShop\Adapter\Customer\Group\Repository\GroupRepository()), ($container->services['PrestaShop\\PrestaShop\\Adapter\\Customer\\Repository\\CustomerRepository'] ??= new \PrestaShop\PrestaShop\Adapter\Customer\Repository\CustomerRepository()), ($container->services['PrestaShop\\PrestaShop\\Adapter\\Product\\Repository\\ProductRepository'] ?? $container->load('getProductRepository3Service')), ($container->privates['PrestaShop\\PrestaShop\\Core\\Util\\Number\\NumberExtractor'] ?? $container->load('getNumberExtractorService'))), ($container->services['PrestaShop\\PrestaShop\\Adapter\\Configuration'] ??= new \PrestaShop\PrestaShop\Adapter\Configuration()));
    }
}
