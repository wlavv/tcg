<?php

namespace ContainerKctP96m;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getPayPalSdkConfigurationBuilderService extends AdminKernelDevDebugContainer
{
    /**
     * Gets the public 'PrestaShop\Module\PrestashopCheckout\PayPal\Sdk\PayPalSdkConfigurationBuilder' shared autowired service.
     *
     * @return \PrestaShop\Module\PrestashopCheckout\PayPal\Sdk\PayPalSdkConfigurationBuilder
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->services['PrestaShop\\Module\\PrestashopCheckout\\PayPal\\Sdk\\PayPalSdkConfigurationBuilder'] = new \PrestaShop\Module\PrestashopCheckout\PayPal\Sdk\PayPalSdkConfigurationBuilder(($container->services['PrestaShop\\Module\\PrestashopCheckout\\Environment\\Env'] ?? $container->load('getEnv2Service')), ($container->services['PrestaShop\\Module\\PrestashopCheckout\\PayPal\\PayPalConfiguration'] ?? $container->load('getPayPalConfigurationService')), ($container->services['PrestaShop\\Module\\PrestashopCheckout\\PayPal\\PayPalPayLaterConfiguration'] ?? $container->load('getPayPalPayLaterConfigurationService')), ($container->services['PrestaShop\\Module\\PrestashopCheckout\\FundingSource\\FundingSourceConfigurationRepository'] ?? $container->load('getFundingSourceConfigurationRepositoryService')), ($container->services['PrestaShop\\Module\\PrestashopCheckout\\ExpressCheckout\\ExpressCheckoutConfiguration'] ?? $container->load('getExpressCheckoutConfigurationService')), ($container->services['PrestaShop\\Module\\PrestashopCheckout\\ShopContext'] ?? $container->load('getShopContextService')), ($container->services['PrestaShop\\Module\\PrestashopCheckout\\Context\\PrestaShopContext'] ??= new \PrestaShop\Module\PrestashopCheckout\Context\PrestaShopContext()), ($container->services['ps_checkout.logger'] ?? $container->load('getPsCheckout_LoggerService')), ($container->services['PrestaShop\\Module\\PrestashopCheckout\\FundingSource\\FundingSourceEligibilityConstraint'] ??= new \PrestaShop\Module\PrestashopCheckout\FundingSource\FundingSourceEligibilityConstraint()), ($container->services['ps_checkout.bus.query'] ?? $container->load('getPsCheckout_Bus_QueryService')));
    }
}
