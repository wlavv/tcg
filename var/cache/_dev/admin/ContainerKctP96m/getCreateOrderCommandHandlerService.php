<?php

namespace ContainerKctP96m;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getCreateOrderCommandHandlerService extends AdminKernelDevDebugContainer
{
    /**
     * Gets the public 'PrestaShop\Module\PrestashopCheckout\Order\CommandHandler\CreateOrderCommandHandler' shared autowired service.
     *
     * @return \PrestaShop\Module\PrestashopCheckout\Order\CommandHandler\CreateOrderCommandHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->services['PrestaShop\\Module\\PrestashopCheckout\\Order\\CommandHandler\\CreateOrderCommandHandler'] = new \PrestaShop\Module\PrestashopCheckout\Order\CommandHandler\CreateOrderCommandHandler(($container->services['PrestaShop\\Module\\PrestashopCheckout\\Context\\ContextStateManager'] ??= new \PrestaShop\Module\PrestashopCheckout\Context\ContextStateManager()), ($container->services['PrestaShop\\Module\\PrestashopCheckout\\Repository\\PsCheckoutCartRepository'] ?? $container->load('getPsCheckoutCartRepositoryService')), ($container->services['PrestaShop\\Module\\PrestashopCheckout\\Order\\State\\Service\\OrderStateMapper'] ?? $container->load('getOrderStateMapperService')), ($container->services['ps_checkout.module'] ?? $container->load('getPsCheckout_ModuleService')), ($container->services['PrestaShop\\Module\\PrestashopCheckout\\Order\\Service\\CheckOrderAmount'] ??= new \PrestaShop\Module\PrestashopCheckout\Order\Service\CheckOrderAmount()), ($container->services['PrestaShop\\Module\\PrestashopCheckout\\FundingSource\\FundingSourceTranslationProvider'] ?? $container->load('getFundingSourceTranslationProviderService')), ($container->services['PrestaShop\\Module\\PrestashopCheckout\\Order\\EventSubscriber\\OrderEventSubscriber'] ?? $container->load('getOrderEventSubscriberService')));
    }
}
