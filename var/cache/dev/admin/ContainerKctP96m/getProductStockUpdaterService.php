<?php

namespace ContainerKctP96m;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getProductStockUpdaterService extends AdminKernelDevDebugContainer
{
    /**
     * Gets the private 'PrestaShop\PrestaShop\Adapter\Product\Stock\Update\ProductStockUpdater' shared autowired service.
     *
     * @return \PrestaShop\PrestaShop\Adapter\Product\Stock\Update\ProductStockUpdater
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['PrestaShop\\PrestaShop\\Adapter\\Product\\Stock\\Update\\ProductStockUpdater'] = new \PrestaShop\PrestaShop\Adapter\Product\Stock\Update\ProductStockUpdater(($container->privates['PrestaShop\\PrestaShop\\Core\\Stock\\StockManager'] ??= new \PrestaShop\PrestaShop\Core\Stock\StockManager()), ($container->services['PrestaShop\\PrestaShop\\Adapter\\Product\\Repository\\ProductRepository'] ?? $container->load('getProductRepository3Service')), ($container->privates['PrestaShop\\PrestaShop\\Adapter\\Product\\Stock\\Repository\\StockAvailableRepository'] ?? $container->load('getStockAvailableRepositoryService')), ($container->services['PrestaShop\\PrestaShop\\Adapter\\Product\\Stock\\Repository\\MovementReasonRepository'] ?? $container->load('getMovementReasonRepositoryService')), ($container->services['PrestaShop\\PrestaShop\\Adapter\\Configuration'] ??= new \PrestaShop\PrestaShop\Adapter\Configuration()), ($container->services['PrestaShop\\PrestaShop\\Adapter\\HookManager'] ??= new \PrestaShop\PrestaShop\Adapter\HookManager()));
    }
}
