<?php

namespace ContainerKctP96m;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getGenerateProductCombinationsHandlerService extends AdminKernelDevDebugContainer
{
    /**
     * Gets the public 'PrestaShop\PrestaShop\Adapter\Product\Combination\CommandHandler\GenerateProductCombinationsHandler' shared service.
     *
     * @return \PrestaShop\PrestaShop\Adapter\Product\Combination\CommandHandler\GenerateProductCombinationsHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->services['PrestaShop\\PrestaShop\\Adapter\\Product\\Combination\\CommandHandler\\GenerateProductCombinationsHandler'] = new \PrestaShop\PrestaShop\Adapter\Product\Combination\CommandHandler\GenerateProductCombinationsHandler(new \PrestaShop\PrestaShop\Adapter\Product\Combination\Create\CombinationCreator(($container->services['PrestaShop\\PrestaShop\\Core\\Product\\Combination\\Generator\\CombinationGenerator'] ??= new \PrestaShop\PrestaShop\Core\Product\Combination\Generator\CombinationGenerator()), ($container->privates['PrestaShop\\PrestaShop\\Adapter\\Product\\Combination\\Repository\\CombinationRepository'] ?? $container->load('getCombinationRepositoryService')), ($container->services['PrestaShop\\PrestaShop\\Adapter\\Product\\Repository\\ProductRepository'] ?? $container->load('getProductRepository3Service')), ($container->privates['PrestaShop\\PrestaShop\\Adapter\\Product\\Stock\\Repository\\StockAvailableRepository'] ?? $container->load('getStockAvailableRepositoryService')), ($container->services['PrestaShop\\PrestaShop\\Adapter\\AttributeGroup\\Repository\\AttributeGroupRepository'] ?? $container->load('getAttributeGroupRepositoryService')), ($container->privates['PrestaShop\\PrestaShop\\Adapter\\Attribute\\Repository\\AttributeRepository'] ?? $container->load('getAttributeRepositoryService')), ($container->privates['PrestaShop\\PrestaShop\\Adapter\\Product\\Combination\\Update\\DefaultCombinationUpdater'] ?? $container->load('getDefaultCombinationUpdaterService'))), ($container->privates['PrestaShop\\PrestaShop\\Adapter\\Product\\Update\\ProductSupplierUpdater'] ?? $container->load('getProductSupplierUpdaterService')));
    }
}
