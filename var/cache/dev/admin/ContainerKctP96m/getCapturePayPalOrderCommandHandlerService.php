<?php

namespace ContainerKctP96m;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getCapturePayPalOrderCommandHandlerService extends AdminKernelDevDebugContainer
{
    /**
     * Gets the public 'PrestaShop\Module\PrestashopCheckout\PayPal\Order\CommandHandler\CapturePayPalOrderCommandHandler' shared autowired service.
     *
     * @return \PrestaShop\Module\PrestashopCheckout\PayPal\Order\CommandHandler\CapturePayPalOrderCommandHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->services['PrestaShop\\Module\\PrestashopCheckout\\PayPal\\Order\\CommandHandler\\CapturePayPalOrderCommandHandler'] = new \PrestaShop\Module\PrestashopCheckout\PayPal\Order\CommandHandler\CapturePayPalOrderCommandHandler(($container->services['PrestaShop\\Module\\PrestashopCheckout\\Http\\MaaslandHttpClient'] ?? $container->load('getMaaslandHttpClientService')), ($container->services['ps_checkout.event.dispatcher.adapter2'] ?? $container->load('getPsCheckout_Event_Dispatcher_Adapter2Service')), ($container->services['ps_checkout.cache.paypal.order'] ?? $container->load('getPsCheckout_Cache_Paypal_OrderService')), ($container->services['PrestaShop\\Module\\PrestashopCheckout\\Context\\PrestaShopContext'] ??= new \PrestaShop\Module\PrestashopCheckout\Context\PrestaShopContext()), ($container->services['PrestaShop\\Module\\PrestashopCheckout\\Repository\\PayPalCustomerRepository'] ?? $container->load('getPayPalCustomerRepositoryService')), ($container->services['PrestaShop\\Module\\PrestashopCheckout\\Repository\\PayPalOrderRepository'] ?? $container->load('getPayPalOrderRepositoryService')), ($container->services['PrestaShop\\Module\\PrestashopCheckout\\PayPal\\Order\\EventProcessor\\PayPalOrderEventProcessor'] ?? $container->load('getPayPalOrderEventProcessorService')));
    }
}
